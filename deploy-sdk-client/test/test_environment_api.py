# coding: utf-8

"""
    

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import deploy_sdk_client
from deploy_sdk_client.rest import ApiException
from deploy_sdk_client.apis.environment_api import EnvironmentApi


class TestEnvironmentApi(unittest.TestCase):
    """ EnvironmentApi unit test stubs """

    def setUp(self):
        self.api = deploy_sdk_client.apis.environment_api.EnvironmentApi()

    def tearDown(self):
        pass

    def test_check_environment_import_for_name_and_version(self):
        """
        Test case for check_environment_import_for_name_and_version

        Check if Environment Names And Version is already Exists
        """
        pass

    def test_check_if_environment_exists(self):
        """
        Test case for check_if_environment_exists

        Check if environment with specified name is already created by the user
        """
        pass

    def test_confirm_destroy_env_by_token(self):
        """
        Test case for confirm_destroy_env_by_token

        Destroy deployment using destroy token
        """
        pass

    def test_copy_and_deploy(self):
        """
        Test case for copy_and_deploy

        Create a copy of an environment and deploy
        """
        pass

    def test_copy_environment(self):
        """
        Test case for copy_environment

        Copy an environment using configuration like tags and input variables
        """
        pass

    def test_create_empty_env_resource(self):
        """
        Test case for create_empty_env_resource

        Creates a new resource with given name and resourceName and gives resource template to set applicable attribute values
        """
        pass

    def test_create_new_env_package(self):
        """
        Test case for create_new_env_package

        Create package on the resource and gives package template to set values for required attributes
        """
        pass

    def test_create_new_env_resource(self):
        """
        Test case for create_new_env_resource

        Creates a new resource with given name and resourceName and positionX and positionY and gives resource template to set applicable attribute values
        """
        pass

    def test_create_new_env_resource_using_import(self):
        """
        Test case for create_new_env_resource_using_import

        Creates a new resource with given name, resourceName, positonX, positionY, and existingId and gives resource template to set applicable attribute values
        """
        pass

    def test_delete_environment(self):
        """
        Test case for delete_environment

        Deletes environment by id
        """
        pass

    def test_delete_package(self):
        """
        Test case for delete_package

        delete package by id
        """
        pass

    def test_delete_resource(self):
        """
        Test case for delete_resource

        Delete resource by id
        """
        pass

    def test_deploy_as_blueprint(self):
        """
        Test case for deploy_as_blueprint

        Deploy an environment by id
        """
        pass

    def test_deploy_by_config(self):
        """
        Test case for deploy_by_config

        Deploy/Redeploys an environment by environment id with deployment name and other deployment configurations
        """
        pass

    def test_deploy_by_env_id(self):
        """
        Test case for deploy_by_env_id

        Deploy an environment by environment id with deploy configuration
        """
        pass

    def test_deploy_by_env_id_and_config(self):
        """
        Test case for deploy_by_env_id_and_config

        Deploy an environment by environment id
        """
        pass

    def test_deploy_by_env_name_version_and_config(self):
        """
        Test case for deploy_by_env_name_version_and_config

        Deploy an environment by name and version
        """
        pass

    def test_destroy(self):
        """
        Test case for destroy

        Destroys environment deployment from REAN Deploy and Actually erases your infracture on provider
        """
        pass

    def test_destroy_deployment_by_env_name_and_deployment_name(self):
        """
        Test case for destroy_deployment_by_env_name_and_deployment_name

        Destroys environment deployment. Actually erases your infracture on provider
        """
        pass

    def test_destroy_deployment_by_id(self):
        """
        Test case for destroy_deployment_by_id

        Destroys environment deployment. Actually erases your infracture on provider
        """
        pass

    def test_destroy_deployment_by_id_and_deployment_name(self):
        """
        Test case for destroy_deployment_by_id_and_deployment_name

        Destroys environment deployment. Actually erases your infracture on provider
        """
        pass

    def test_destroy_env_by_token(self):
        """
        Test case for destroy_env_by_token

        One-time destroy of an an environment by a non-user using token
        """
        pass

    def test_download_terraform_files(self):
        """
        Test case for download_terraform_files

        Gives zip stream of all terraform files for an environment
        """
        pass

    def test_export_blueprint_environment(self):
        """
        Test case for export_blueprint_environment

        Export Environment with all Parent environment which can be imported into another REAN Deploy Server
        """
        pass

    def test_export_environment(self):
        """
        Test case for export_environment

        Export Environment into JSON format
        """
        pass

    def test_get_actions(self):
        """
        Test case for get_actions

        Get all supported Resource type
        """
        pass

    def test_get_all_deployments_for_environment(self):
        """
        Test case for get_all_deployments_for_environment

        Get all the deplyments of enviroment which are owned by loggedIn User
        """
        pass

    def test_get_all_deployments_for_environment_across_versions(self):
        """
        Test case for get_all_deployments_for_environment_across_versions

        Get all the deplyments of enviroment across all versions
        """
        pass

    def test_get_all_deployments_for_environment_by_id(self):
        """
        Test case for get_all_deployments_for_environment_by_id

        Get all the deployments of Environment by environment id
        """
        pass

    def test_get_all_deployments_for_environment_by_id_and_deployment_name(self):
        """
        Test case for get_all_deployments_for_environment_by_id_and_deployment_name

        Get deployment of Environment by environment id and deployment name
        """
        pass

    def test_get_all_environments(self):
        """
        Test case for get_all_environments

        Get all User environments
        """
        pass

    def test_get_all_resources(self):
        """
        Test case for get_all_resources

        Gets all resources of an environment by environment id
        """
        pass

    def test_get_cost_of_environment(self):
        """
        Test case for get_cost_of_environment

        Estimated Cost of the environment before deploying Environment
        """
        pass

    def test_get_deploy_resource_list(self):
        """
        Test case for get_deploy_resource_list

        Gets all resources by deployment
        """
        pass

    def test_get_deploy_resource_log(self):
        """
        Test case for get_deploy_resource_log

        Gets terraform deploy logs for a resource.
        """
        pass

    def test_get_deploy_status_by_env_id(self):
        """
        Test case for get_deploy_status_by_env_id

        Gets default deployment status for an environment
        """
        pass

    def test_get_deploy_status_by_env_id_and_deployment_name(self):
        """
        Test case for get_deploy_status_by_env_id_and_deployment_name

        Gets deploy status for an environment by environment id and deployment name
        """
        pass

    def test_get_deployed_resource_ids(self):
        """
        Test case for get_deployed_resource_ids

        Gets all deployed resources information for an environment
        """
        pass

    def test_get_deployment_details(self):
        """
        Test case for get_deployment_details

        Get deployment of Environment by environment id and deployment name
        """
        pass

    def test_get_deployment_input_json(self):
        """
        Test case for get_deployment_input_json

        Get deployment's input json by environment id and deployment Name
        """
        pass

    def test_get_deployment_status(self):
        """
        Test case for get_deployment_status

        Gets deployment information related to runId of an environment
        """
        pass

    def test_get_environment(self):
        """
        Test case for get_environment

        Get Environment by Id
        """
        pass

    def test_get_environment_by_version_and_name(self):
        """
        Test case for get_environment_by_version_and_name

        Get Environment by name and version
        """
        pass

    def test_get_environment_difference(self):
        """
        Test case for get_environment_difference

        Get environment difference of two enviroments
        """
        pass

    def test_get_environment_hierarchy(self):
        """
        Test case for get_environment_hierarchy

        Get hierarchical information about parents of specified specified environment
        """
        pass

    def test_get_groups(self):
        """
        Test case for get_groups

        Get all the platform groups
        """
        pass

    def test_get_input_json(self):
        """
        Test case for get_input_json

        Gets all environments resources json with attributes names/values
        """
        pass

    def test_get_layout_resources(self):
        """
        Test case for get_layout_resources

        Gets all resources of environment without their attributes/packages
        """
        pass

    def test_get_links_between_resources(self):
        """
        Test case for get_links_between_resources

        Get dependency links between an environment resources
        """
        pass

    def test_get_parent_deployment_mapping_data(self):
        """
        Test case for get_parent_deployment_mapping_data

        Get Parent Deployment Map For Env For Deployment
        """
        pass

    def test_get_private_key_for_resource(self):
        """
        Test case for get_private_key_for_resource

        Gets private key for SSH keygen resource
        """
        pass

    def test_get_resource_with_id(self):
        """
        Test case for get_resource_with_id

        Get resource with id
        """
        pass

    def test_get_shared_environment(self):
        """
        Test case for get_shared_environment

        Get environment sharing policy of environment by environment Id
        """
        pass

    def test_get_tf_state(self):
        """
        Test case for get_tf_state

        Gets terraform state of the environment
        """
        pass

    def test_get_validation_param(self):
        """
        Test case for get_validation_param

        
        """
        pass

    def test_import_blueprint(self):
        """
        Test case for import_blueprint

        Import blurprint in REAN Deploy
        """
        pass

    def test_import_environment(self):
        """
        Test case for import_environment

        Import environment into REAN Deploy.
        """
        pass

    def test_is_multiple_resources(self):
        """
        Test case for is_multiple_resources

        True if resource has multiple resources
        """
        pass

    def test_plan(self):
        """
        Test case for plan

        Plan for an environment using Environment id and Deploy configuration
        """
        pass

    def test_plan_deployment(self):
        """
        Test case for plan_deployment

        Plan for an environment using Environment id, Deployment Name and Deploy configuration
        """
        pass

    def test_prepare_import_blueprint(self):
        """
        Test case for prepare_import_blueprint

        Prepare blueprint before importing it
        """
        pass

    def test_prepare_import_environment(self):
        """
        Test case for prepare_import_environment

        Prepare environment imports before actually importing it
        """
        pass

    def test_re_deploy_by_deployment_id_and_config(self):
        """
        Test case for re_deploy_by_deployment_id_and_config

        Redeploy deployment using deployment id and Deploy configuration
        """
        pass

    def test_re_deploy_by_env_name_version_and_config(self):
        """
        Test case for re_deploy_by_env_name_version_and_config

        Redeploy an environment by name and version
        """
        pass

    def test_refresh(self):
        """
        Test case for refresh

        Executes refresh for an environment and gives changes, should be followed by updateState if change seems fine
        """
        pass

    def test_save_all(self):
        """
        Test case for save_all

        Save Environment with resources and their attributes and packages
        """
        pass

    def test_save_as(self):
        """
        Test case for save_as

        Copy Existing env with different name.
        """
        pass

    def test_save_environment(self):
        """
        Test case for save_environment

        Save Environment
        """
        pass

    def test_save_new_version(self):
        """
        Test case for save_new_version

        Create new Version
        """
        pass

    def test_share_all_version_environment(self):
        """
        Test case for share_all_version_environment

        Share all the versions of environment using specified policy
        """
        pass

    def test_share_environment(self):
        """
        Test case for share_environment

        Save of update environment sharing policies
        """
        pass

    def test_stop_deployment(self):
        """
        Test case for stop_deployment

        Stop ongoing deployment by deployment id
        """
        pass

    def test_update_environment(self):
        """
        Test case for update_environment

        Update Environment
        """
        pass

    def test_update_package_version(self):
        """
        Test case for update_package_version

        Updated package version for package on environment resource
        """
        pass

    def test_update_resource(self):
        """
        Test case for update_resource

        Update resource using payload
        """
        pass

    def test_update_tf_state(self):
        """
        Test case for update_tf_state

        Updates terraform state from refresh action on environment.
        """
        pass

    def test_validate_resource_name_change(self):
        """
        Test case for validate_resource_name_change

        Check if new resource Name is valid, returns true if valid
        """
        pass


if __name__ == '__main__':
    unittest.main()
